const t = window.Reflect,
  { get: o, ownKeys: f, set: g } = t,
  y = "value";
function b(t) {
  return "object" == typeof t && null !== t;
}
function S(t) {
  return "string" == typeof t;
}
export default function(t) {
  !(function(t) {
    if (
      t instanceof HTMLElement ||
      t instanceof SVGElement ||
      t instanceof Element
    )
      return !0;
    throw TypeError("invalid HTMLElement!");
  })(t);
  const e =
    ("INPUT" === t.tagName && "text" === o(t, "type")) ||
    "TEXTAREA" === t.tagName;
  var r = Object.create(null);
  return new Proxy(r, {
    ownKeys() {
      const r = f(t.attributes).filter(t => !/\d/.test(String(t)[0]));
      return e ? Array.from(new Set([...r, y])) : r;
    },
    get(n) {
      if (e && n === y) return o(t, y);
      var i = t.getAttribute(String(n));
      if (i && S(i))
        try {
          return JSON.parse(String(i));
        } catch (t) {
          return i;
        }
    },
    set(n, i) {
      return e && n === y
        ? g(t, y, i)
        : "style" === n
        ? (t.setAttribute(
            String(n),
            S(i)
              ? i
              : b(i)
              ? ((o = i),
                Object.entries(o)
                  .map(([t, e]) => t + ":" + e)
                  .join(";"))
              : String(i)
          ),
          !0)
        : (t.setAttribute(String(n), b(i) ? JSON.stringify(i) : String(i)), !0);
      var o;
    },
    deleteProperty: (e, r) => (t.removeAttribute(String(r)), !0),
    has: (r, n) => !(!e || n !== y) || t.hasAttribute(String(n)),
    defineProperty: () => !1,
    getOwnPropertyDescriptor(n) {
      const i = { enumerable: !0, configurable: !0, writable: !0 };
      if (e && n === y) return { value: o(t, y), ...i };
      var s = t.getAttribute(String(n));
      return s ? { value: s, ...i } : void 0;
    }
  });
}
//# sourceMappingURL=index.min.js.map
