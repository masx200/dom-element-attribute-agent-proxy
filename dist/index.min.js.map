{"version":3,"file":"index.min.js","sources":["index.js"],"sourcesContent":["const acceptValue = [ \"input\", \"textarea\", \"option\", \"select\" ];\n\nvar mustUseDomProp = (tag, attr, attrtype) => {\n    return attr === \"value\" && acceptValue.includes(tag) && attrtype !== \"button\" || attr === \"selected\" && tag === \"option\" || attr === \"checked\" && tag === \"input\" || attr === \"muted\" && tag === \"video\";\n};\n\nconst hyphenateRE = /\\B([A-Z])/g;\n\nconst hyphenate = str => {\n    return str.replace(hyphenateRE, \"-$1\").toLowerCase();\n};\n\nconst String = window.String;\n\nconst Reflect = window.Reflect;\n\nconst {get: get, set: set, ownKeys: ownKeys} = Reflect;\n\nconst valuestring = \"value\";\n\nfunction isobject(a) {\n    return typeof a === \"object\" && a !== null;\n}\n\nfunction isstring(a) {\n    return typeof a === \"string\";\n}\n\nfunction isArray(a) {\n    return Array.isArray(a);\n}\n\nfunction isSet(a) {\n    return a instanceof Set;\n}\n\nconst isinputcheckbox = ele => \"input\" === geteletagname(ele) && (get(ele, \"type\") === \"checkbox\" || get(ele, \"type\") === \"radio\");\n\nfunction objtostylestring(obj) {\n    obj = JSON.parse(JSON.stringify(obj));\n    const objentries = Object.entries(obj).map(([key, value]) => [ hyphenate(key).trim(), value ]);\n    return objentries.map(([key, value]) => key + \":\" + value).join(\";\");\n}\n\nfunction asserthtmlelement(ele) {\n    if (!(ele instanceof Element)) {\n        console.error(ele);\n        console.error(\"invalid HTMLElement!\");\n        throw TypeError();\n    }\n}\n\nfunction createeleattragentreadwrite(ele) {\n    asserthtmlelement(ele);\n    var temp = Object.create(null);\n    const outputattrs = new Proxy(temp, {\n        ownKeys() {\n            const isinputtextortextareaflag = isinputtextortextarea(ele);\n            const keys = attributesownkeys(ele);\n            return Array.from(new Set([ ...keys, isinputcheckbox(ele) ? \"checked\" : undefined, isinputtextortextareaflag ? valuestring : undefined ].flat(Infinity).filter(a => !!a)));\n        },\n        get(target, key) {\n            if (mustUseDomProp(geteletagname(ele), String(key), get(ele, \"type\"))) {\n                return get(ele, String(key));\n            } else {\n                const v = getattribute(ele, String(key));\n                if (v === \"\") {\n                    return true;\n                }\n                if (v === null) {\n                    return;\n                }\n                if (isstring(v)) {\n                    try {\n                        return JSON.parse(String(v));\n                    } catch (error) {\n                        return v;\n                    }\n                } else return;\n            }\n        },\n        set(t, key, v) {\n            if (\"function\" === typeof v) {\n                console.error(v);\n                console.error(\"Setting properties as functions is not allowed\");\n                throw TypeError();\n            }\n            if (mustUseDomProp(geteletagname(ele), String(key), get(ele, \"type\"))) {\n                return set(ele, String(key), v);\n            } else if (key === \"style\") {\n                const csstext = isstring(v) ? v : isobject(v) ? objtostylestring(v) : String(v);\n                set(get(ele, \"style\"), \"cssText\", csstext.trim());\n                return true;\n            } else if (key === \"class\" && isobject(v)) {\n                const classtext = isArray(v) ? v.join(\" \") : isSet(v) ? [ ...v ].join(\" \") : String(v);\n                setattribute(ele, String(key), classtext);\n                return true;\n            } else {\n                if (false === v || v === null || v === undefined) {\n                    removeAttribute(ele, String(key));\n                    return true;\n                }\n                if (isSet(v)) {\n                    setattribute(ele, String(key), JSON.stringify([ ...v ]));\n                    return true;\n                } else {\n                    if (v === true) {\n                        v = \"\";\n                    }\n                    setattribute(ele, String(key), isobject(v) ? JSON.stringify(v) : String(v));\n                    return true;\n                }\n            }\n        },\n        deleteProperty(t, k) {\n            removeAttribute(ele, String(k));\n            return true;\n        },\n        has(target, key) {\n            return ownKeys(outputattrs).includes(key);\n        },\n        defineProperty() {\n            return false;\n        },\n        getOwnPropertyDescriptor(target, key) {\n            const otherdescipter = {\n                enumerable: true,\n                configurable: true,\n                writable: true\n            };\n            const myvalue = get(outputattrs, key);\n            if (typeof myvalue !== \"undefined\") {\n                return {\n                    value: myvalue,\n                    ...otherdescipter\n                };\n            } else {\n                return;\n            }\n        },\n        setPrototypeOf() {\n            return false;\n        }\n    });\n    return outputattrs;\n}\n\nfunction attributesownkeys(ele) {\n    return ele.getAttributeNames();\n}\n\nfunction getattribute(ele, key) {\n    return ele.getAttribute(key);\n}\n\nfunction geteletagname(ele) {\n    return ele.tagName.toLowerCase();\n}\n\nfunction setattribute(ele, key, value) {\n    return ele.setAttribute(key, value);\n}\n\nfunction removeAttribute(ele, key) {\n    return ele.removeAttribute(key);\n}\n\nfunction isinputtextortextarea(ele) {\n    const tagname = geteletagname(ele);\n    return tagname === \"textarea\" || tagname === \"select\" || tagname === \"input\" && get(ele, \"type\") === \"text\";\n}\n\nexport default createeleattragentreadwrite;\n//# sourceMappingURL=index.js.map\n"],"names":["acceptValue","mustUseDomProp","tag","attr","attrtype","includes","hyphenateRE","hyphenate","str","replace","toLowerCase","String","window","Reflect","get","set","ownKeys","valuestring","isobject","a","isstring","isSet","Set","isinputcheckbox","ele","geteletagname","tagName","setattribute","key","value","setAttribute","removeAttribute","Element","TypeError","asserthtmlelement","temp","Object","create","outputattrs","Proxy","[object Object]","isinputtextortextareaflag","tagname","isinputtextortextarea","keys","getAttributeNames","attributesownkeys","Array","from","undefined","flat","Infinity","filter","target","v","getAttribute","getattribute","JSON","parse","error","t","csstext","obj","stringify","entries","map","trim","join","classtext","isArray","deleteProperty","k","has","defineProperty","otherdescipter","enumerable","configurable","writable","myvalue","setPrototypeOf"],"mappings":"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"}