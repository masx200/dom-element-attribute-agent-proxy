{"version":3,"file":"index.min.js","sources":["index.js"],"sourcesContent":["const Reflect = window.Reflect;\n\nconst {get: get, set: set} = Reflect;\n\nconst valuestring = \"value\";\n\nfunction isobject(a) {\n    return typeof a === \"object\" && a !== null;\n}\n\nfunction isstring(a) {\n    return typeof a === \"string\";\n}\n\nfunction objtostylestring(o) {\n    return Object.entries(o).map(([key, value]) => key + \":\" + value).join(\";\");\n}\n\nfunction asserthtmlelement(ele) {\n    if (!(ele instanceof Element)) {\n        throw TypeError(\"invalid HTMLElement!\");\n    } else return true;\n}\n\nfunction createeleattragentreadwrite(ele) {\n    asserthtmlelement(ele);\n    const isinputtextortextareaflag = isinputtextortextarea(ele);\n    var temp = Object.create(null);\n    const outputattrs = new Proxy(temp, {\n        ownKeys() {\n            const keys = attributesownkeys(ele);\n            return isinputtextortextareaflag ? Array.from(new Set([ ...keys, valuestring ])) : keys;\n        },\n        get(target, key) {\n            if (isinputtextortextareaflag && key === valuestring) {\n                return get(ele, valuestring);\n            } else {\n                const v = getattribute(ele, String(key));\n                if (v === \"\") {\n                    return true;\n                }\n                if (v === null) {\n                    return;\n                }\n                if (isstring(v)) {\n                    try {\n                        return JSON.parse(String(v));\n                    } catch (error) {\n                        return v;\n                    }\n                } else return;\n            }\n        },\n        set(t, key, v) {\n            if (isinputtextortextareaflag && key === valuestring) {\n                return set(ele, valuestring, v);\n            } else if (key === \"style\") {\n                setattribute(ele, String(key), isstring(v) ? v : isobject(v) ? objtostylestring(v) : String(v));\n                return true;\n            } else {\n                if (v === true) {\n                    v = \"\";\n                }\n                setattribute(ele, String(key), isobject(v) ? JSON.stringify(v) : String(v));\n                return true;\n            }\n        },\n        deleteProperty(t, k) {\n            removeAttribute(ele, String(k));\n            return true;\n        },\n        has(target, key) {\n            if (isinputtextortextareaflag && key === valuestring) {\n                return true;\n            } else {\n                return hasAttribute(ele, String(key));\n            }\n        },\n        defineProperty() {\n            return false;\n        },\n        getOwnPropertyDescriptor(target, key) {\n            const otherdescipter = {\n                enumerable: true,\n                configurable: true,\n                writable: true\n            };\n            const myvalue = get(outputattrs, key);\n            if (typeof myvalue !== \"undefined\") {\n                return {\n                    value: myvalue,\n                    ...otherdescipter\n                };\n            } else {\n                return;\n            }\n        }\n    });\n    return outputattrs;\n}\n\nfunction attributesownkeys(ele) {\n    return ele.getAttributeNames();\n}\n\nfunction getattribute(ele, key) {\n    return ele.getAttribute(key);\n}\n\nfunction geteletagname(ele) {\n    return ele.tagName.toLowerCase();\n}\n\nfunction setattribute(ele, key, value) {\n    return ele.setAttribute(key, value);\n}\n\nfunction removeAttribute(ele, key) {\n    return ele.removeAttribute(key);\n}\n\nfunction hasAttribute(ele, key) {\n    return ele.hasAttribute(key);\n}\n\nfunction isinputtextortextarea(ele) {\n    const tagname = geteletagname(ele);\n    return tagname === \"input\" && get(ele, \"type\") === \"text\" || tagname === \"textarea\";\n}\n\nexport default createeleattragentreadwrite;\n//# sourceMappingURL=index.js.map\n"],"names":["Reflect","window","get","set","valuestring","isobject","a","isstring","setattribute","ele","key","value","setAttribute","Element","TypeError","asserthtmlelement","isinputtextortextareaflag","tagname","tagName","toLowerCase","geteletagname","isinputtextortextarea","temp","Object","create","outputattrs","Proxy","[object Object]","keys","getAttributeNames","attributesownkeys","Array","from","Set","target","v","getAttribute","getattribute","String","JSON","parse","error","t","o","entries","map","join","stringify","deleteProperty","k","removeAttribute","has","hasAttribute","defineProperty","otherdescipter","enumerable","configurable","writable","myvalue"],"mappings":"AAAA,MAAMA,EAAUC,OAAOD,SAEhBE,IAAKA,EAAKC,IAAKA,GAAOH,EAEvBI,EAAc,QAEpB,SAASC,EAASC,GACd,MAAoB,iBAANA,GAAwB,OAANA,EAGpC,SAASC,EAASD,GACd,MAAoB,iBAANA,EAsGlB,SAASE,EAAaC,EAAKC,EAAKC,GAC5B,OAAOF,EAAIG,aAAaF,EAAKC,kBA1FjC,SAAqCF,IANrC,SAA2BA,GACvB,GAAMA,aAAeI,QAEd,OAAO,EADV,MAAMC,UAAU,wBAKpBC,CAAkBN,GAClB,MAAMO,EAmGV,SAA+BP,GAC3B,MAAMQ,EAjBV,SAAuBR,GACnB,OAAOA,EAAIS,QAAQC,cAgBHC,CAAcX,GAC9B,MAAmB,UAAZQ,GAA4C,SAArBf,EAAIO,EAAK,SAAkC,aAAZQ,EArG3BI,CAAsBZ,GACxD,IAAIa,EAAOC,OAAOC,OAAO,MACzB,MAAMC,EAAc,IAAIC,MAAMJ,EAAM,CAChCK,UACI,MAAMC,EAuElB,SAA2BnB,GACvB,OAAOA,EAAIoB,oBAxEUC,CAAkBrB,GAC/B,OAAOO,EAA4Be,MAAMC,KAAK,IAAIC,IAAI,IAAKL,EAAMxB,KAAkBwB,GAEvFD,IAAIO,EAAQxB,GACR,GAAIM,GAA6BN,IAAQN,EACrC,OAAOF,EAAIO,EAAKL,GACb,CACH,MAAM+B,EAoEtB,SAAsB1B,EAAKC,GACvB,OAAOD,EAAI2B,aAAa1B,GArEF2B,CAAa5B,EAAK6B,OAAO5B,IACnC,GAAU,KAANyB,EACA,OAAO,EAEX,GAAU,OAANA,EACA,OAEJ,IAAI5B,EAAS4B,GAMN,OALH,IACI,OAAOI,KAAKC,MAAMF,OAAOH,IAC3B,MAAOM,GACL,OAAON,KAKvBR,IAAIe,EAAGhC,EAAKyB,GACR,OAAInB,GAA6BN,IAAQN,EAC9BD,EAAIM,EAAKL,EAAa+B,GACd,UAARzB,GACPF,EAAaC,EAAK6B,OAAO5B,GAAMH,EAAS4B,GAAKA,EAAI9B,EAAS8B,IA3ChDQ,EA2CsER,EA1CrFZ,OAAOqB,QAAQD,GAAGE,IAAI,EAAEnC,EAAKC,KAAWD,EAAM,IAAMC,GAAOmC,KAAK,MA0C0BR,OAAOH,KACrF,KAEG,IAANA,IACAA,EAAI,IAER3B,EAAaC,EAAK6B,OAAO5B,GAAML,EAAS8B,GAAKI,KAAKQ,UAAUZ,GAAKG,OAAOH,KACjE,GAlDvB,IAA0BQ,GAqDlBK,eAAc,CAACN,EAAGO,KAkD1B,SAAyBxC,EAAKC,GACnBD,EAAIyC,gBAAgBxC,GAlDnBwC,CAAgBzC,EAAK6B,OAAOW,KACrB,GAEXE,IAAG,CAACjB,EAAQxB,OACJM,GAA6BN,IAAQN,IAiDrD,SAAsBK,EAAKC,GACvB,OAAOD,EAAI2C,aAAa1C,GA/CL0C,CAAa3C,EAAK6B,OAAO5B,IAGxC2C,eAAc,KACH,EAEX1B,yBAAyBO,EAAQxB,GAC7B,MAAM4C,EAAiB,CACnBC,YAAY,EACZC,cAAc,EACdC,UAAU,GAERC,EAAUxD,EAAIuB,EAAaf,GACjC,YAAuB,IAAZgD,EACA,CACH/C,MAAO+C,KACJJ,QAGP,KAIZ,OAAO7B"}