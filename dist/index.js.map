{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["const String = window.String;\r\nconst Reflect = window.Reflect;\r\nconst { get, set } = Reflect;\r\nconst valuestring = \"value\";\r\nfunction isobject(a: any): a is object {\r\n  return typeof a === \"object\" && a !== null;\r\n}\r\nfunction isstring(a: any): a is string {\r\n  return typeof a === \"string\";\r\n}\r\nfunction isArray(a: any): a is Array<any> {\r\n  return Array.isArray(a);\r\n}\r\n\r\nfunction isSet(a: any): a is Set<any> {\r\n  return a instanceof Set;\r\n}\r\n\r\n// function inputandtextareaagent(ele) {\r\n//   asserthtmlelement(ele);\r\n//   if (\r\n//     (ele.tagName === \"INPUT\" && ele.type === \"text\") ||\r\n//     ele.tagName === \"TEXTAREA\"\r\n//   ) {\r\n//     return new Proxy(ele, {\r\n//       ownKeys() {},\r\n//       set() {},\r\n//       has() {},\r\n//       get() {}\r\n//     });\r\n//   } else {\r\n//     return ele;\r\n//   }\r\n// }\r\n\r\nfunction objtostylestring(o: object): string {\r\n  return Object.entries(o)\r\n    .map(([key, value]) => key + \":\" + value)\r\n    .join(\";\");\r\n}\r\nfunction asserthtmlelement(ele: any) {\r\n  if (\r\n    !//     ele instanceof HTMLElement ||\r\n    //      ele instanceof SVGElement ||\r\n    (ele instanceof Element)\r\n  ) {\r\n    throw TypeError(\"invalid HTMLElement!\");\r\n  } else return true;\r\n}\r\nexport default function createeleattragentreadwrite(\r\n  ele: HTMLElement | SVGElement | Element | HTMLInputElement\r\n): object {\r\n  //   if (\r\n  //     !(\r\n  //       ele instanceof HTMLElement ||\r\n  //       ele instanceof SVGElement ||\r\n  //       ele instanceof Element\r\n  //     )\r\n  //   ) {\r\n  //     throw TypeError(\"invalid HTMLElement!\");\r\n  //   }\r\n  asserthtmlelement(ele);\r\n\r\n  // const isinputtextortextarea =\r\n  //   (ele.tagName === \"INPUT\" && get(ele, \"type\") === \"text\") ||\r\n  //   ele.tagName === \"TEXTAREA\";\r\n  const isinputtextortextareaflag = isinputtextortextarea(ele);\r\n  var temp: object = Object.create(null);\r\n\r\n  const outputattrs = new Proxy(temp, {\r\n    ownKeys(/* target */) {\r\n      const keys = attributesownkeys(ele);\r\n      // ownKeys(ele.attributes).filter(\r\n      //   k => !/\\d/.test(String(k)[0])\r\n      // );\r\n      return isinputtextortextareaflag\r\n        ? Array.from(new Set([...keys, valuestring]))\r\n        : keys;\r\n    },\r\n    get(target, key) {\r\n      if (isinputtextortextareaflag && key === valuestring) {\r\n        return get(ele, valuestring);\r\n      } else {\r\n        const v = getattribute(ele, String(key));\r\n        // ele.getAttribute(String(key));\r\n        //   console.log(v);\r\n        if (v === \"\") {\r\n          return true;\r\n        }\r\n        /* 修复属性空字符串返回不是true的bug问题 */\r\n        if (v === null) {\r\n          return;\r\n        }\r\n\r\n        //如果属性空字符串则返回true\r\n\r\n        if (isstring(v)) {\r\n          try {\r\n            return JSON.parse(String(v)); // v\r\n          } catch (error) {\r\n            return v;\r\n          }\r\n        } else return;\r\n      }\r\n    },\r\n    set(t, key, v) {\r\n      //不允许设置属性为函数\r\n      if (\"function\" === typeof v) {\r\n        console.error(v);\r\n        throw TypeError(\"Setting properties as functions is not allowed\");\r\n\r\n        // throw TypeError(\"不允许设置属性为函数\");\r\n      }\r\n      /* 对于input的checkbox设置 checked属性时,不添加属性,直接修改checked属性*/\r\n      if (geteletagname(ele) === \"input\" && key === \"checked\") {\r\n        set(ele, key, v);\r\n        return true;\r\n      }\r\n\r\n      if (isinputtextortextareaflag && key === valuestring) {\r\n        return set(ele, valuestring, v);\r\n      } else if (key === \"style\") {\r\n        setattribute(\r\n          ele,\r\n          String(key),\r\n          isstring(v) ? v : isobject(v) ? objtostylestring(v) : String(v)\r\n        );\r\n        /*   ele.setAttribute(\r\n          String(key),\r\n          isstring(v) ? v : isobject(v) ? objtostylestring(v) : String(v)\r\n        ); */\r\n        return true;\r\n      } else if (key === \"class\" && isobject(v)) {\r\n        if (isArray(v)) {\r\n          setattribute(ele, String(key), v.join(\" \"));\r\n        } else if (isSet(v)) {\r\n          setattribute(ele, String(key), [...v].join(\" \"));\r\n        } else {\r\n          setattribute(ele, String(key), JSON.stringify(v));\r\n        }\r\n        //\r\n      } else {\r\n        //如果设置为true,则设置属性空字符串\r\n        if (isSet(v)) {\r\n          setattribute(ele, String(key), JSON.stringify([...v]));\r\n        } else {\r\n          if (v === true) {\r\n            v = \"\";\r\n          }\r\n\r\n          setattribute(\r\n            ele,\r\n            String(key),\r\n            isobject(v) ? JSON.stringify(v) : String(v)\r\n          );\r\n          /*  ele.setAttribute(\r\n          String(key),\r\n          isobject(v) ? JSON.stringify(v) : String(v)\r\n        ); */\r\n          return true;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n    deleteProperty(t, k) {\r\n      removeAttribute(ele, String(k));\r\n      // ele.removeAttribute(String(k));\r\n      return true;\r\n    },\r\n    has(target, key) {\r\n      if (isinputtextortextareaflag && key === valuestring) {\r\n        return true;\r\n      } else {\r\n        return hasAttribute(ele, String(key));\r\n\r\n        // ele.hasAttribute(String(key));\r\n      }\r\n    },\r\n    defineProperty() {\r\n      return false;\r\n    },\r\n    getOwnPropertyDescriptor(target, key) {\r\n      const otherdescipter = {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true\r\n      };\r\n      const myvalue: any = get(outputattrs, key);\r\n      if (typeof myvalue !== \"undefined\") {\r\n        return {\r\n          value: myvalue,\r\n          ...otherdescipter\r\n        };\r\n      } else {\r\n        return;\r\n      }\r\n\r\n      /*  if (isinputtextortextareaflag && key === valuestring) {\r\n        return {\r\n          value: get(ele, valuestring),\r\n          ...otherdescipter\r\n          //   enumerable: true,\r\n          //   configurable: true,\r\n          //   writable: true\r\n        };\r\n      } else {\r\n        const attr = getattribute(ele, String(key));\r\n        // ele.getAttribute(String(key));\r\n\r\n        //如果属性空字符串则返回true\r\n        let outvalue;\r\n        if (attr === \"\") {\r\n          outvalue = true;\r\n        }\r\n        if (outvalue) {\r\n          return {\r\n            value: outvalue,\r\n            ...otherdescipter\r\n            // enumerable: true,\r\n            // configurable: true,\r\n            // writable: true\r\n          };\r\n        } else {\r\n          return;\r\n        }\r\n      } */\r\n    },\r\n    setPrototypeOf() {\r\n      return false;\r\n    }\r\n    /*  setPrototypeOf() {\r\n      return false;\r\n    },\r\n    getPrototypeOf() {\r\n      return null;\r\n    }*/\r\n  });\r\n  return outputattrs;\r\n}\r\nfunction attributesownkeys(\r\n  ele: HTMLElement | Element | SVGElement | HTMLInputElement\r\n): string[] {\r\n  //   return ownKeys(ele.attributes).filter(k => !/\\d/.test(String(k)[0]));\r\n  return ele.getAttributeNames();\r\n}\r\nfunction getattribute(\r\n  ele: HTMLElement | Element | SVGElement | HTMLInputElement,\r\n  key: string\r\n) {\r\n  return ele.getAttribute(key);\r\n}\r\nfunction geteletagname(ele: Element /* { tagName: string } */) {\r\n  return ele.tagName.toLowerCase();\r\n}\r\nfunction setattribute(\r\n  ele: HTMLElement | Element | SVGElement | HTMLInputElement,\r\n  key: string,\r\n  value: string\r\n) {\r\n  return ele.setAttribute(key, value);\r\n}\r\nfunction removeAttribute(\r\n  ele: HTMLElement | Element | SVGElement | HTMLInputElement,\r\n  key: string\r\n) {\r\n  return ele.removeAttribute(key);\r\n}\r\n\r\nfunction hasAttribute(\r\n  ele: HTMLElement | Element | SVGElement | HTMLInputElement,\r\n  key: string\r\n) {\r\n  return ele.hasAttribute(key);\r\n}\r\n\r\nfunction isinputtextortextarea(\r\n  ele: HTMLElement | Element | SVGElement | HTMLInputElement\r\n) {\r\n  const tagname = geteletagname(ele);\r\n  return (\r\n    (tagname === \"input\" && get(ele, \"type\") === \"text\") ||\r\n    tagname === \"textarea\"\r\n  );\r\n}\r\n"],"names":["String","window","Reflect","get","set","valuestring","isobject","a","isstring","isArray","Array","isSet","Set","objtostylestring","o","Object","entries","map","key","value","join","asserthtmlelement","ele","Element","TypeError","createeleattragentreadwrite","isinputtextortextareaflag","isinputtextortextarea","temp","create","outputattrs","Proxy","[object Object]","keys","attributesownkeys","from","target","v","getattribute","JSON","parse","error","t","console","geteletagname","setattribute","stringify","k","removeAttribute","hasAttribute","otherdescipter","enumerable","configurable","writable","myvalue","getAttributeNames","getAttribute","tagName","toLowerCase","setAttribute","tagname"],"mappings":"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"}