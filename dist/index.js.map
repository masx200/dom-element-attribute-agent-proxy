{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["const Reflect = window.Reflect;\r\nconst { get, ownKeys, set } = Reflect;\r\nconst valuestring = \"value\";\r\nfunction isobject(a: any) {\r\n  return typeof a === \"object\" && a !== null;\r\n}\r\nfunction isstring(a: any) {\r\n  return typeof a === \"string\";\r\n}\r\n\r\n// function inputandtextareaagent(ele) {\r\n//   asserthtmlelement(ele);\r\n//   if (\r\n//     (ele.tagName === \"INPUT\" && ele.type === \"text\") ||\r\n//     ele.tagName === \"TEXTAREA\"\r\n//   ) {\r\n//     return new Proxy(ele, {\r\n//       ownKeys() {},\r\n//       set() {},\r\n//       has() {},\r\n//       get() {}\r\n//     });\r\n//   } else {\r\n//     return ele;\r\n//   }\r\n// }\r\n\r\nfunction objtostylestring(o: object): string {\r\n  return Object.entries(o)\r\n    .map(([key, value]) => key + \":\" + value)\r\n    .join(\";\");\r\n}\r\nfunction asserthtmlelement(ele: any) {\r\n  if (\r\n    !//     ele instanceof HTMLElement ||\r\n    //      ele instanceof SVGElement ||\r\n    (ele instanceof Element)\r\n  ) {\r\n    throw TypeError(\"invalid HTMLElement!\");\r\n  } else return true;\r\n}\r\nexport default function createeleattragentreadwrite(\r\n  ele: HTMLElement | SVGElement | Element | HTMLInputElement\r\n): object {\r\n  //   if (\r\n  //     !(\r\n  //       ele instanceof HTMLElement ||\r\n  //       ele instanceof SVGElement ||\r\n  //       ele instanceof Element\r\n  //     )\r\n  //   ) {\r\n  //     throw TypeError(\"invalid HTMLElement!\");\r\n  //   }\r\n  asserthtmlelement(ele);\r\n\r\n  // const isinputtextortextarea =\r\n  //   (ele.tagName === \"INPUT\" && get(ele, \"type\") === \"text\") ||\r\n  //   ele.tagName === \"TEXTAREA\";\r\n  const isinputtextortextareaflag = isinputtextortextarea(ele);\r\n  var temp: object = Object.create(null);\r\n  return new Proxy(temp, {\r\n    ownKeys(/* target */) {\r\n      const keys = attributesownkeys(ele);\r\n      // ownKeys(ele.attributes).filter(\r\n      //   k => !/\\d/.test(String(k)[0])\r\n      // );\r\n      return isinputtextortextareaflag\r\n        ? Array.from(new Set([...keys, valuestring]))\r\n        : keys;\r\n    },\r\n    get(target, key) {\r\n      if (isinputtextortextareaflag && key === valuestring) {\r\n        return get(ele, valuestring);\r\n      } else {\r\n        var v = getattribute(ele, String(key));\r\n        // ele.getAttribute(String(key));\r\n        //   console.log(v);\r\n        if (!v) {\r\n          return;\r\n        }\r\n        if (isstring(v)) {\r\n          try {\r\n            return JSON.parse(String(v)); // v\r\n          } catch (error) {\r\n            return v;\r\n          }\r\n        } else return;\r\n      }\r\n    },\r\n    set(t, key, v) {\r\n      if (isinputtextortextareaflag && key === valuestring) {\r\n        return set(ele, valuestring, v);\r\n      } else if (key === \"style\") {\r\n        setattribute(\r\n          ele,\r\n          String(key),\r\n          isstring(v) ? v : isobject(v) ? objtostylestring(v) : String(v)\r\n        );\r\n        /*   ele.setAttribute(\r\n          String(key),\r\n          isstring(v) ? v : isobject(v) ? objtostylestring(v) : String(v)\r\n        ); */\r\n        return true;\r\n      } else {\r\n        setattribute(\r\n          ele,\r\n          String(key),\r\n          isobject(v) ? JSON.stringify(v) : String(v)\r\n        );\r\n        /*  ele.setAttribute(\r\n          String(key),\r\n          isobject(v) ? JSON.stringify(v) : String(v)\r\n        ); */\r\n        return true;\r\n      }\r\n    },\r\n    deleteProperty(t, k) {\r\n      removeAttribute(ele, String(k));\r\n      // ele.removeAttribute(String(k));\r\n      return true;\r\n    },\r\n    has(target, key) {\r\n      if (isinputtextortextareaflag && key === valuestring) {\r\n        return true;\r\n      } else {\r\n        return hasAttribute(ele, String(key));\r\n\r\n        // ele.hasAttribute(String(key));\r\n      }\r\n    },\r\n    defineProperty() {\r\n      return false;\r\n    },\r\n    getOwnPropertyDescriptor(target, key) {\r\n      const otherdescipter = {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true\r\n      };\r\n      if (isinputtextortextareaflag && key === valuestring) {\r\n        return {\r\n          value: get(ele, valuestring),\r\n          ...otherdescipter\r\n          //   enumerable: true,\r\n          //   configurable: true,\r\n          //   writable: true\r\n        };\r\n      } else {\r\n        var attr = getattribute(ele, String(key));\r\n        // ele.getAttribute(String(key));\r\n        if (attr) {\r\n          return {\r\n            value: attr,\r\n            ...otherdescipter\r\n            // enumerable: true,\r\n            // configurable: true,\r\n            // writable: true\r\n          };\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    /*  setPrototypeOf() {\r\n      return false;\r\n    },\r\n    getPrototypeOf() {\r\n      return null;\r\n    }*/\r\n  });\r\n}\r\nfunction attributesownkeys(\r\n  ele: HTMLElement | Element | SVGElement | HTMLInputElement\r\n) {\r\n  return ownKeys(ele.attributes).filter(k => !/\\d/.test(String(k)[0]));\r\n}\r\nfunction getattribute(\r\n  ele: HTMLElement | Element | SVGElement | HTMLInputElement,\r\n  key: string\r\n) {\r\n  return ele.getAttribute(key);\r\n}\r\nfunction geteletagname(ele: Element /* { tagName: string } */) {\r\n  return ele.tagName.toLowerCase();\r\n}\r\nfunction setattribute(\r\n  ele: HTMLElement | Element | SVGElement | HTMLInputElement,\r\n  key: string,\r\n  value: string\r\n) {\r\n  return ele.setAttribute(key, value);\r\n}\r\nfunction removeAttribute(\r\n  ele: HTMLElement | Element | SVGElement | HTMLInputElement,\r\n  key: string\r\n) {\r\n  return ele.removeAttribute(key);\r\n}\r\n\r\nfunction hasAttribute(\r\n  ele: HTMLElement | Element | SVGElement | HTMLInputElement,\r\n  key: string\r\n) {\r\n  return ele.hasAttribute(key);\r\n}\r\n\r\nfunction isinputtextortextarea(\r\n  ele: HTMLElement | Element | SVGElement | HTMLInputElement\r\n) {\r\n  const tagname = geteletagname(ele);\r\n  return (\r\n    (tagname === \"input\" && get(ele, \"type\") === \"text\") ||\r\n    tagname === \"textarea\"\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}